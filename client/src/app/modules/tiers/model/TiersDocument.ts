import { BillingClosureRecipientType } from './BillingClosureRecipientType';
import { BillingClosureType } from './BillingClosureType';
import { BillingLabelType } from "./BillingLabelType";
import { Mail } from "./Mail";
import { PaymentDeadlineType } from "./PaymentDeadlineType";
import { RefundType } from './RefundType';
import { Responsable } from './Responsable';
import { Tiers } from "./Tiers";
import { TiersDocumentType } from "./TiersDocumentType";

export interface TiersDocument {
  id: number;
  tiers: Tiers;
  responsable: Responsable;
  code: string;
  tiersDocumentType: TiersDocumentType;
  isRecipientClient: boolean;
  isRecipientAffaire: boolean;
  affaireAddress: string;
  clientAddress: string;
  affaireRecipient: string;
  clientRecipient: string;
  mails: Mail[];
  isMailingPaper: boolean;
  isMailingPdf: boolean;
  numberMailingAffaire: number;
  numberMailingClient: number;
  mailsClient: Mail[];
  mailsCCResponsableClient: Responsable[];
  mailsCCResponsableAffaire: Responsable[];
  mailsAffaire: Mail[];
  billingLabelType: BillingLabelType;
  billingLabel: string;
  isResponsableOnBilling: boolean;
  isCommandNumberMandatory: boolean;
  commandNumber: string;
  paymentDeadlineType: PaymentDeadlineType;
  isAutomaticDunning: boolean;
  refundType: RefundType;
  refundIBAN: string;
  isRefundable: boolean;
  billingClosureType: BillingClosureType;
  billingClosureRecipientType: BillingClosureRecipientType;
}
