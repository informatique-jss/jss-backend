import { AccountingRecord } from "../../accounting/model/AccountingRecord";
import { Deposit } from "../../invoicing/model/Deposit";
import { InvoiceStatus } from "../../invoicing/model/InvoiceStatus";
import { Payment } from "../../invoicing/model/Payment";
import { City } from "../../miscellaneous/model/City";
import { Country } from "../../miscellaneous/model/Country";
import { IAttachment } from '../../miscellaneous/model/IAttachment';
import { Provider } from '../../miscellaneous/model/Provider';
import { BillingLabelType } from "../../tiers/model/BillingLabelType";
import { Responsable } from "../../tiers/model/Responsable";
import { Tiers } from "../../tiers/model/Tiers";
import { Confrere } from "./Confrere";
import { CustomerOrder } from "./CustomerOrder";
import { InvoiceItem } from "./InvoiceItem";

export interface Invoice extends IAttachment {
  id: number;
  createdDate: Date;
  dueDate: Date;
  invoiceItems: InvoiceItem[];
  billingLabel: string;
  billingLabelAddress: string;
  billingLabelPostalCode: string;
  cedexComplement: string;
  billingLabelCity: City;
  billingLabelCountry: Country;
  billingLabelIsIndividual: boolean;
  billingLabelType: BillingLabelType;
  isResponsableOnBilling: boolean;
  isCommandNumberMandatory: boolean;
  isInvoiceFromProvider: boolean;
  commandNumber: string;
  customerOrder: CustomerOrder;
  totalPrice: number;
  payments: Payment[];
  deposits: Deposit[];
  invoiceStatus: InvoiceStatus;
  accountingRecords: AccountingRecord[];
  tiers: Tiers | undefined;
  responsable: Responsable | undefined;
  confrere: Confrere | undefined;
  provider: Provider | undefined;
  manualAccountingDocumentDate: Date;
  manualAccountingDocumentNumber: string;
}
