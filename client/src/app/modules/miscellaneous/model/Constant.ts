import { AccountingJournal } from "../../accounting/model/AccountingJournal";
import { PrincipalAccountingAccount } from '../../accounting/model/PrincipalAccountingAccount';
import { InvoiceStatus } from "../../invoicing/model/InvoiceStatus";
import { PaymentWay } from "../../invoicing/model/PaymentWay";
import { Employee } from '../../profile/model/Employee';
import { ActType } from "../../quotation/model/ActType";
import { AssignationType } from "../../quotation/model/AssignationType";
import { BodaccPublicationType } from "../../quotation/model/BodaccPublicationType";
import { Confrere } from "../../quotation/model/Confrere";
import { DomiciliationContractType } from "../../quotation/model/DomiciliationContractType";
import { FormeJuridique } from '../../quotation/model/guichet-unique/referentials/FormeJuridique';
import { TypeFormalite } from '../../quotation/model/guichet-unique/referentials/TypeFormalite';
import { TypePersonne } from '../../quotation/model/guichet-unique/referentials/TypePersonne';
import { JournalType } from "../../quotation/model/JournalType";
import { MailRedirectionType } from "../../quotation/model/MailRedirectionType";
import { TransfertFundsType } from "../../quotation/model/TransfertFundsType";
import { BillingClosureRecipientType } from '../../tiers/model/BillingClosureRecipientType';
import { BillingClosureType } from '../../tiers/model/BillingClosureType';
import { BillingLabelType } from "../../tiers/model/BillingLabelType";
import { RefundType } from "../../tiers/model/RefundType";
import { SubscriptionPeriodType } from "../../tiers/model/SubscriptionPeriodType";
import { TiersType } from "../../tiers/model/TiersType";
import { AttachmentType } from "./AttachmentType";
import { BillingType } from "./BillingType";
import { CompetentAuthorityType } from "./CompetentAuthorityType";
import { Country } from "./Country";
import { DeliveryService } from './DeliveryService';
import { Department } from "./Department";
import { DocumentType } from "./DocumentType";
import { Language } from './Language';
import { LegalForm } from "./LegalForm";
import { PaymentType } from "./PaymentType";
import { Vat } from "./Vat";

export interface Constant {
  id: number;
  billingLabelTypeCodeAffaire: BillingLabelType;
  billingLabelTypeOther: BillingLabelType;
  billingLabelTypeCustomer: BillingLabelType;
  accountingJournalSales: AccountingJournal;
  accountingJournalPurchases: AccountingJournal;
  accountingJournalANouveau: AccountingJournal;
  tiersTypeProspect: TiersType;
  tiersTypeClient: TiersType;
  documentTypePublication: DocumentType;
  documentTypeCfe: DocumentType;
  documentTypeKbis: DocumentType;
  documentTypeBilling: DocumentType;
  documentTypeDunning: DocumentType;
  documentTypeRefund: DocumentType;
  documentTypeBillingClosure: DocumentType;
  documentTypeProvisionnalReceipt: DocumentType;
  documentTypeProofReading: DocumentType;
  documentTypePublicationCertificate: DocumentType;
  attachmentTypeKbis: AttachmentType;
  attachmentTypeCni: AttachmentType;
  attachmentTypeLogo: AttachmentType;
  attachmentTypeProofOfAddress: AttachmentType;
  attachmentTypeInvoice: AttachmentType;
  attachmentTypeKbisUpdated: AttachmentType;
  attachmentTypePublicationFlag: AttachmentType;
  attachmentTypePublicationReceipt: AttachmentType;
  attachmentTypePublicationProof: AttachmentType;
  attachmentTypeJournal: AttachmentType;
  attachmentTypeBillingClosure: AttachmentType;
  countryFrance: Country;
  countryMonaco: Country;
  billingTypeLogo: BillingType;
  billingTypeRedactedByJss: BillingType;
  billingTypeBaloPackage: BillingType;
  billingTypePublicationPaper: BillingType;
  billingTypePublicationReceipt: BillingType;
  billingTypePublicationFlag: BillingType;
  billingTypeBodaccFollowup: BillingType;
  billingTypeBodaccFollowupAndRedaction: BillingType;
  billingTypeNantissementDeposit: BillingType;
  billingTypeSocialShareNantissementRedaction: BillingType;
  billingTypeBusinnessNantissementRedaction: BillingType;
  billingTypeSellerPrivilegeRedaction: BillingType;
  billingTypeTreatmentMultipleModiciation: BillingType;
  billingTypeVacationMultipleModification: BillingType;
  billingTypeRegisterPurchase: BillingType;
  billingTypeRegisterInitials: BillingType;
  billingTypeRegisterShippingCosts: BillingType;
  billingTypeDisbursement: BillingType;
  billingTypeFeasibilityStudy: BillingType;
  billingTypeChronopostFees: BillingType;
  billingTypeApplicationFees: BillingType;
  billingTypeBankCheque: BillingType;
  billingTypeComplexeFile: BillingType;
  billingTypeBilan: BillingType;
  billingTypeDocumentScanning: BillingType;
  billingTypeEmergency: BillingType;
  stringNantissementDepositFormeJuridiqueCode: string;
  strinSocialShareNantissementRedactionFormeJuridiqueCode: string;
  stringBusinnessNantissementRedactionFormeJuridiqueCode: string;
  paymentTypePrelevement: PaymentType;
  paymentTypeVirement: PaymentType;
  paymentTypeCB: PaymentType;
  paymentTypeEspeces: PaymentType;
  refundTypeVirement: RefundType;
  subscriptionPeriodType12M: SubscriptionPeriodType;
  legalFormUnregistered: LegalForm;
  journalTypeSpel: JournalType;
  journalTypePaper: JournalType;
  confrereJssSpel: Confrere;
  confrereJssPaper: Confrere;
  domiciliationContractTypeKeepMail: DomiciliationContractType;
  domiciliationContractTypeRouteEmail: DomiciliationContractType;
  domiciliationContractTypeRouteMail: DomiciliationContractType;
  domiciliationContractTypeRouteEmailAndMail: DomiciliationContractType;
  mailRedirectionTypeOther: MailRedirectionType;
  bodaccPublicationTypeMerging: BodaccPublicationType;
  bodaccPublicationTypeSplit: BodaccPublicationType;
  bodaccPublicationTypePartialSplit: BodaccPublicationType;
  bodaccPublicationTypePossessionDispatch: BodaccPublicationType;
  bodaccPublicationTypeEstateRepresentativeDesignation: BodaccPublicationType;
  bodaccPublicationTypeSaleOfBusiness: BodaccPublicationType;
  actTypeSeing: ActType;
  actTypeAuthentic: ActType;
  assignationTypeEmployee: AssignationType;
  employeeBillingResponsible: Employee;
  employeeMailResponsible: Employee;
  employeeInvoiceReminderResponsible: Employee;
  employeeSalesDirector: Employee;
  transfertFundsTypePhysique: TransfertFundsType;
  transfertFundsTypeMoral: TransfertFundsType;
  transfertFundsTypeBail: TransfertFundsType;
  competentAuthorityTypeRcs: CompetentAuthorityType;
  competentAuthorityTypeCfp: CompetentAuthorityType;
  invoiceStatusSend: InvoiceStatus;
  invoiceStatusReceived: InvoiceStatus;
  invoiceStatusPayed: InvoiceStatus;
  invoiceStatusCancelled: InvoiceStatus;
  paymentWayInbound: PaymentWay;
  paymentWayOutboud: PaymentWay;
  vatTwenty: Vat;
  vatEight: Vat;
  departmentMartinique: Department;
  departmentGuadeloupe: Department;
  departmentReunion: Department;
  typePersonnePersonnePhysique: TypePersonne;
  typePersonnePersonneMorale: TypePersonne;
  typePersonneExploitation: TypePersonne;
  formeJuridiqueEntrepreneurIndividuel: FormeJuridique;
  typeFormaliteCessation: TypeFormalite;
  typeFormaliteModification: TypeFormalite;
  typeFormaliteCreation: TypeFormalite;
  typeFormaliteCorrection: TypeFormalite;
  salesSharedMailbox: string;
  accountingSharedMaiblox: string;
  billingClosureRecipientTypeResponsable: BillingClosureRecipientType;
  billingClosureRecipientTypeClient: BillingClosureRecipientType;
  billingClosureTypeAffaire: BillingClosureType;
  deliveryServiceJss: DeliveryService;
  languageFrench: Language;
  principalAccountingAccountProvider: PrincipalAccountingAccount;
  principalAccountingAccountCustomer: PrincipalAccountingAccount;
  principalAccountingAccountDeposit: PrincipalAccountingAccount;
  principalAccountingAccountProduct: PrincipalAccountingAccount;
  principalAccountingAccountCharge: PrincipalAccountingAccount;
  principalAccountingAccountBank: PrincipalAccountingAccount;
  principalAccountingAccountWaiting: PrincipalAccountingAccount;
  principalAccountingAccountLost: PrincipalAccountingAccount;
  principalAccountingAccountProfit: PrincipalAccountingAccount;
}
